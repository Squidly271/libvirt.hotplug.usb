Menu="VMs:2"
Title="Libvirt Hotplug USB"
Icon="libvirt.hotplug.usb.png"
Markdown="false"
---
<?PHP
/* Copyright 2016, Burhan Shakil 
 * Copyright 2018, Dan Landon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 3,
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 */
?>
<?
require_once('/usr/local/emhttp/webGui/include/Helpers.php');
if (is_dir('/usr/local/emhttp/plugins/dynamix.vm.manager/classes')) {
	require_once('/usr/local/emhttp/plugins/dynamix.vm.manager/classes/libvirt.php');
	require_once('/usr/local/emhttp/plugins/dynamix.vm.manager/classes/libvirt_helpers.php');
} else {
	require_once('/usr/local/emhttp/plugins/dynamix.vm.manager/include/libvirt.php');
	require_once('/usr/local/emhttp/plugins/dynamix.vm.manager/include/libvirt_helpers.php');
}
$arrValidUSBDevices = getValidUSBDevices();
$uuid = $_GET['uuid'];	

//Get domain variables for each domain
$doms = $lv->get_domains();
$vmlist=array();

for ($i = 0; $i < sizeof($doms); $i++) 
{
	global $vmlist;
	$name = $doms[$i];
	$res = $lv->get_domain_by_name($name);
	$dom = $lv->domain_get_info($res);
	$state = $lv->domain_state_translate($dom['state']);
	if($state=='running')
	{	
		global $vmlist;
		$vmlist[]=array('name'=>$name);
	}
}


function list_vms() {
  global $vmlist;
  return $vmlist;
}

function list_usbs() 
{
  global $arrValidUSBDevices;
  $out = array();
  	if (!empty($arrValidUSBDevices)) 
  	{
  		foreach($arrValidUSBDevices as $i => $arrDev) 
   		{
   			$out[] = array('name'=>$arrDev['name'],'id'=>$arrDev['id']);
   		} 
  	}
	else 
	{
		$out[] = array('name'=>"None available");
	}
  return $out;
}
?>

<script>
var URL = '/plugins/libvirt.hotplug.usb/include/virshcmd.php';

function operateUSB(action) 
{
	var vms = $("select[name=vms] option:selected").val();
	var usbs = $("select[name=usbs] option:selected").val();
	if (vms && usbs) {
		$("textarea[name=Status]").val('Detaching Please wait...');
		$("#detach").attr("disabled", true);
		$("#attach").attr("disabled", true);
		var opts = new Object();
		opts["action"] = action;
		opts["VMNAME"] = vms;
		opts["USBID"] = usbs;
		$.post(URL,opts).done(function(data){
			if (data) {
				$("textarea[name=Status]").val(data);
				$("#detach").attr("disabled", false);
				$("#attach").attr("disabled", false);
			}
		});
	}
}
</script>

Running VMs:
<select name="vms" size="1">
	<?foreach (list_vms() as $vms):?>
	<?=mk_option("",$vms['name'],$vms['name'])?>
	<?endforeach;?>
</select>

USB Devices:
<select name="usbs" size="1">
	<?foreach (list_usbs() as $usb):?>
	<?=mk_option("",$usb['id'],$usb['name'])?>
	<?endforeach;?>
</select>

<input type="button" value="Detach" onclick="operateUSB('detach');" id="detach" style="margin-top:0">
<input type="button" value="Attach" onclick="operateUSB('attach');" id="attach" style="margin-top:0">

<br />
Status:
<br />
<textarea readonly name="Status"></textarea>
<br />
<br />

Note: Some USB Devices require detaching and attaching multiple times to be properly detected by VMs.
